name: Copy API docs

on:
  workflow_dispatch:
    inputs:
      branch_merge:
        description: 'Destination branch for merge'
        default: 'main'
      component:
        description: 'Component docs to update'
        type: choice
        options:
          - compactc
          - dapp-connector
          - midnight-indexer
          - ledger
          - midnight-js
          - wallet-api
      branch_compactc:
        description: 'Compactc branch'
        default: 'testnet'
      branch_dapp_connector:
        description: 'DApp Connector branch'
        default: 'main'
      branch_midnight_js:
        description: 'Midnight JS branch'
        default: 'main'
      branch_ledger:
        description: 'Ledger branch'
        default: 'master'
      branch_indexer:
        description: 'Midnight Indexer branch'
        default: 'main'
      branch_wallet_api:
        description: 'Wallet branch'
        default: 'main'

jobs:
  copy_api_docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout docs repository specific branch
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # 5.0.0
        with:
          path: ${{ github.workspace }}
          ref: ${{ github.event.inputs.branch_merge }}

      - name: Git config
        run: |
          git config --global user.email "midnight-ci@users.noreply.github.com"
          git config --global user.name "Midnight CI GitHub Action"
          git config --global url.https://${{ secrets.GH_TOKEN }}@github.com/.insteadOf https://github.com/

      - name: Clone compactc repo
        if: ${{ github.event.inputs.component == 'compactc' }}
        run: |
          mkdir ./temp
          cd temp
          git clone --branch ${{ github.event.inputs.branch_compactc }} https://github.com/midnightntwrk/compactc.git

      - name: Clone ledger repo
        if: ${{ github.event.inputs.component == 'ledger' }}
        run: |
          mkdir ./temp
          cd temp
          git clone --branch ${{ github.event.inputs.branch_ledger }} https://github.com/midnightntwrk/midnight-ledger-prototype.git

      - name: Update compact-runtime
        if: ${{ github.event.inputs.component == 'compactc' }}
        run: |
          DEST_DIR=docs/develop/reference/midnight-api/compact-runtime
          SRC_DIR=temp/compactc/doc/api/runtime
          rm -rf ${DEST_DIR} || true
          mkdir ${DEST_DIR}
          cp -r ${SRC_DIR}/* ${DEST_DIR}
          echo -e "# Compact runtime API\n\n$(cat ${DEST_DIR}/README.md)" > ${DEST_DIR}/README.md

      - name: Update DApp connector
        if: ${{ github.event.inputs.component == 'dapp-connector' }}
        run: |
          mkdir ./temp
          cd temp
          git clone --branch ${{ github.event.inputs.branch_dapp_connector }} https://github.com/midnightntwrk/midnight-dapp-connector-api.git
          cd ..
          DEST_DIR=docs/develop/reference/midnight-api/dapp-connector
          SRC_DIR=temp/midnight-dapp-connector-api/docs/api
          rm -rf ${DEST_DIR} || true
          mkdir ${DEST_DIR}
          cp -r ${SRC_DIR}/* ${DEST_DIR}
          echo -e "# DApp connector API\n\n$(cat ${DEST_DIR}/README.md)" > ${DEST_DIR}/README.md

      - name: Update ledger
        if: ${{ github.event.inputs.component == 'ledger' }}
        run: |
          DEST_DIR=docs/develop/reference/midnight-api/ledger
          SRC_DIR=temp/midnight-ledger-prototype/docs/api/ledger
          rm -rf ${DEST_DIR} || true
          mkdir ${DEST_DIR}
          cp -r ${SRC_DIR}/* ${DEST_DIR}
          echo -e "# Ledger API\n\n$(cat ${DEST_DIR}/README.md)" > ${DEST_DIR}/README.md

      - name: Update midnight-js
        if: ${{ github.event.inputs.component == 'midnight-js' }}
        run: |
          mkdir ./temp
          cd temp
          git clone --branch ${{ github.event.inputs.branch_midnight_js }} https://github.com/midnightntwrk/midnight-js.git
          cd ..
          DEST_DIR=docs/develop/reference/midnight-api/midnight-js
          SRC_DIR=temp/midnight-js/docs/api
          rm -rf ${DEST_DIR} || true
          mkdir ${DEST_DIR}
          cp -r ${SRC_DIR}/* ${DEST_DIR}
          echo -e "# Midnight JS API\n\n$(cat ${DEST_DIR}/README.md)" > ${DEST_DIR}/README.md

      - name: Update midnight-indexer
        if: ${{ github.event.inputs.component == 'midnight-indexer' }}
        run: |
          mkdir ./temp
          cd temp
          git clone --branch ${{ github.event.inputs.branch_indexer }} https://github.com/midnightntwrk/midnight-indexer.git
          cd ..
          DEST_DIR=docs/develop/reference/midnight-api/midnight-indexer
          SRC_DIR=temp/midnight-indexer/docs/api/v1
          STATIC_DIR=static/midnight-indexer
          rm -rf ${DEST_DIR} || true
          mkdir ${DEST_DIR}
          cp -r ${SRC_DIR}/* ${DEST_DIR}
          mv ${DEST_DIR}/api-documentation.md ${DEST_DIR}/README.md
          sed -E -i 's|\[\`indexer-api/graphql/schema-v1\.graphql\`\]\(.*\)|[midnight-indexer-api-schema](pathname:///midnight-indexer/schema-v1.graphql)|g' ${DEST_DIR}/README.md
          cp temp/midnight-indexer/indexer-api/graphql/schema-v1.graphql ${STATIC_DIR}

      - name: Update midnight-wallet-api
        if: ${{ github.event.inputs.component == 'wallet-api' }}
        run: |
          mkdir ./temp
          cd temp
          git clone --branch ${{ github.event.inputs.branch_wallet_api }} https://github.com/midnightntwrk/midnight-wallet-api.git
          cd ..
          DEST_DIR=docs/develop/reference/midnight-api/wallet-api
          SRC_DIR=temp/midnight-wallet-api/docs/api
          rm -rf ${DEST_DIR} || true
          mkdir ${DEST_DIR}
          cp -r ${SRC_DIR}/* ${DEST_DIR}
          echo -e "# Wallet API\n\n$(cat ${DEST_DIR}/README.md)" > ${DEST_DIR}/README.md

      - name: Inject H1 header into midnight-js packages
        if: ${{ github.event.inputs.component == 'midnight-js' }}
        run: |
          DEST_DIR=docs/develop/reference/midnight-api/midnight-js/@midnight-ntwrk
          for d in ${DEST_DIR}/*/; do echo -e "# $(basename $d)\n\n$(cat $d/README.md)" > $d/README.md; done

      - name: Update zswap
        if: ${{ github.event.inputs.component == 'ledger' }}
        run: |
          DEST_DIR=docs/develop/reference/midnight-api/zswap
          SRC_DIR=temp/midnight-ledger-prototype/docs/api/zswap
          rm -rf ${DEST_DIR} || true
          mkdir ${DEST_DIR}
          cp -r ${SRC_DIR}/* ${DEST_DIR}
          echo -e "# ZSwap API\n\n$(cat ${DEST_DIR}/README.md)" > ${DEST_DIR}/README.md

      - name: Update Compact standard library
        if: ${{ github.event.inputs.component == 'compactc' }}
        run: |
          DEST_DIR=docs/develop/reference/compact/compact-std-library
          SRC_DIR=temp/compactc/doc/api/CompactStandardLibrary
          rm -rf ${DEST_DIR} || true
          mkdir ${DEST_DIR}
          cp -r ${SRC_DIR}/* ${DEST_DIR}
          echo -e "# Compact standard library\n\n$(cat ${DEST_DIR}/README.md)" > ${DEST_DIR}/README.md

      - name: Update static assets from compactc
        if: ${{ github.event.inputs.component == 'compactc' }}
        run: |
          DEST_DIR=static/language
          SRC_1=temp/compactc/doc/Compact.html
          SRC_2=temp/compactc/doc/ledger-adt.mdx
          rm -rf ${DEST_DIR} || true
          mkdir ${DEST_DIR}
          cp -r ${SRC_1} ${DEST_DIR}/compact.html
          cp -r ${SRC_2} ${DEST_DIR}/ledger-adt.mdx

      - name: Update compiler usage
        if: ${{ github.event.inputs.component == 'compactc' }}
        run: |
          DEST=docs/develop/reference/tools/compiler-usage.mdx
          SRC=temp/compactc/doc/compiler-usage.md
          cp -r ${SRC} ${DEST}

      - name: Strip github references - just in case...
        run: |
          find docs/develop/reference -type f -name '*.md' -exec sed -i'' -e 's/github.com\/midnightntwrk/FIXME/g' {} \;

      - name: Add changes
        id: prep
        run: |
          BRANCH=api-docs/merge-prs/`date +'%Y-%m-%dT%H%M%S'`
          rm -rf ./temp
          git checkout -b $BRANCH
          if git diff-index HEAD; then
            echo "NEW_BRANCH=$BRANCH" >> "$GITHUB_OUTPUT"
            echo "UPDATE=true" >> "$GITHUB_OUTPUT"
            echo "Adding new..."
            git add -A
            git push -u origin $BRANCH
          else
            echo "Nothing to update"
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Add any untracked changes
        if: ${{ steps.prep.outputs.UPDATE == 'true' }}
        run: git add --all

      - uses: planetscale/ghcommit-action@322be9669498a4be9ce66efc1169f8f43f6bd883 # v0.2.17
        if: ${{ steps.prep.outputs.UPDATE == 'true' }}
        with:
          commit_message: "Copy API docs from other repositories"
          repo: midnightntwrk/midnight-docs
          branch: ${{ steps.prep.outputs.NEW_BRANCH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Create a PR
        if: ${{ steps.prep.outputs.UPDATE == 'true' }}
        run: |
            gh pr create --base ${{ github.event.inputs.branch_merge }} --title 'Merge API documentation from ${{ github.event.inputs.component }}' --body 'Merging API documentation - created by Midnight CI Github Action'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
