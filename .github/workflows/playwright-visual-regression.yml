name: Vercel Preview Playwright Visual Regression Tests

on:
  workflow_call:
    inputs:
      config-path:
        required: false
        type: string
    secrets:
      token:
        required: false

jobs:
  visual-regression:
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # 5.0.0

      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # 5.0.0
        with:
          node-version: 22

      - name: Enable corepack
        run: |
          corepack enable
          corepack prepare yarn@4 --activate

      - name: Install dependencies
        run: yarn install

      - name: Install Playwright
        run: npx playwright install

      - name: Vercel Preview URL
        id: vercel_preview_url
        uses: zentered/vercel-preview-url@fba568fc6d882ae788a9724d7e28dee618728771 # 1.4.0
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_HEAD_REF: ${{ github.head_ref }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        with:
          vercel_project_id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel_team_id: ${{ secrets.VERCEL_ORG_ID }}

      - name: Read paths from file and generate full URLs
        id: read-urls
        run: |
          base_url="https://${{ steps.vercel_preview_url.outputs.preview_url }}"
          full_urls=""
          paths=$(jq -r '.paths[]' packages/tests/pipelines-urls.json)
          for path in $paths; do
            full_url="${base_url}${path}"
            full_urls="${full_urls}${full_url}\n"
          done
          echo -e "The following URLs will be processed:\n$full_urls"
          echo "urls<<EOF" >> $GITHUB_ENV
          echo -e "$full_urls" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Verify Snapshot Directory
        run: ls -la packages/tests/visual-regression.test.ts-snapshots

      - name: Run Playwright Visual Regression Tests
        continue-on-error: true
        env:
          BASE_URL: "https://${{ steps.vercel_preview_url.outputs.preview_url }}"
          VERCEL_BYPASS_TOKEN: ${{ secrets.VERCEL_BYPASS_TOKEN }}
        run: npx playwright test packages/tests/visual-regression.test.ts --config=packages/tests/playwright.config.ts --reporter=list

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        id: upload-report
        with:
          name: test-report
          path: |
            test-results/*

      - name: Format Playwright message
        id: format_playwright_message
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea  #v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const artifactUrl = '${{ steps.upload-report.outputs.artifact-url }}';

            let commentArray;

            if (artifactUrl && artifactUrl !== 'null') {
              commentArray = [
                `ðŸ”´ Visual comparisons failed. Differences detected. [Download report](${artifactUrl}).`,
                `If this change was expected push updated snapshots by running`,
                `yarn playwright-snapshots:update`
              ];
            } else {
              commentArray = [
                `ðŸŸ¢ Visual comparisons passed for pages:`,
                `${{ env.urls }}`
              ];
            }
            const comment = commentArray.join('\n');
            core.setOutput("comment", comment);

      - run: |
          echo "### Playwright results:: ${{ steps.format_playwright_message.outputs.comment }}" >> $GITHUB_STEP_SUMMARY

      - name: Send Playwright Report to Slack
        if: success() || failure()
        env:
          pr_url: ${{ github.event.pull_request.html_url }}
          comment: ${{ steps.format_playwright_message.outputs.comment }}
          repo_name: ${{ github.repository }}
        run: |
          repo_name=$(echo "$repo_name" | cut -d'/' -f2)

          curl -X POST -H 'Content-type: application/json' \
          --data '{
            "text": "Playwright Visual Regression Tests completed for <'"$pr_url"'|PR #${{ github.event.pull_request.number }}> on '"$repo_name"'. \nTest Summary: \n'"$comment"'"
          }' \
          ${{ secrets.SLACK_WEBHOOK_URL }}
